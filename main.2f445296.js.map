{"version":3,"sources":["scripts/main.js"],"names":["fields","document","querySelectorAll","capitalize","str","result","i","length","toUpperCase","push","slice","firstLetter","charAt","nextLetters","join","forEach","field","inputElement","querySelector","inputID","id","inputName","name","insertAdjacentHTML","placeholder"],"mappings":";AAAA,aAqCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnCD,IAAMA,EAAaC,EAAAA,SAASC,iBAAiB,WAe7C,SAASC,EAAWC,GAGb,IAFCC,IAAAA,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC1BF,EAAIE,KAAOF,EAAIE,GAAGE,gBACpBH,EAAOI,KAAKL,EAAIM,MAAM,EAAGJ,IACzBD,EAAOI,KAAKL,EAAIM,MAAMJ,KAIJ,IAAlBD,EAAOE,QACTF,EAAOI,KAAKL,GAGRO,IAAAA,EAAcN,EAAO,GAAGO,OAAO,GAAGJ,cAClCK,EAAcR,EAAO,GAAGK,MAAM,GAI7BL,OAFPA,EAAO,GAAKM,EAAcE,EAEnBR,EAAOS,KAAK,KAhCrBd,EAAOe,QAAQ,SAAAC,GACPC,IAAAA,EAAeD,EAAME,cAAc,SAC7BC,EAA6BF,EAAjCG,GAAmBC,EAAcJ,EAApBK,KAErBN,EAAMO,mBAAmB,aACWJ,yCAAAA,OAAAA,EAC9BhB,cAAAA,OAAAA,EAAWkB,GAFjB,uBAMAJ,EAAaO,YAAcrB,EAAWkB","file":"main.2f445296.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst fields = [...document.querySelectorAll('.field')];\n\nfields.forEach(field => {\n  const inputElement = field.querySelector('input');\n  const { id: inputID, name: inputName } = inputElement;\n\n  field.insertAdjacentHTML('afterbegin', `\n    <label class=\"field-label\" for=\"${inputID}\">\n      ${capitalize(inputName)}\n    </label>\n  `);\n\n  inputElement.placeholder = capitalize(inputName);\n});\n\nfunction capitalize(str) {\n  const result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === str[i].toUpperCase()) {\n      result.push(str.slice(0, i));\n      result.push(str.slice(i));\n    }\n  }\n\n  if (result.length === 0) {\n    result.push(str);\n  }\n\n  const firstLetter = result[0].charAt(0).toUpperCase();\n  const nextLetters = result[0].slice(1);\n\n  result[0] = firstLetter + nextLetters;\n\n  return result.join(' ');\n};\n"]}